// Generated by view binder compiler. Do not edit!
package com.example.shovip.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.shovip.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button b0;

  @NonNull
  public final Button b1;

  @NonNull
  public final Button b2;

  @NonNull
  public final Button b3;

  @NonNull
  public final Button b4;

  @NonNull
  public final Button b5;

  @NonNull
  public final Button b6;

  @NonNull
  public final Button b7;

  @NonNull
  public final Button b8;

  @NonNull
  public final Button b9;

  @NonNull
  public final Button button11;

  @NonNull
  public final FloatingActionButton floatingActionButton;

  @NonNull
  public final TextInputEditText input;

  @NonNull
  public final TextInputLayout textInputLayout;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button b0,
      @NonNull Button b1, @NonNull Button b2, @NonNull Button b3, @NonNull Button b4,
      @NonNull Button b5, @NonNull Button b6, @NonNull Button b7, @NonNull Button b8,
      @NonNull Button b9, @NonNull Button button11,
      @NonNull FloatingActionButton floatingActionButton, @NonNull TextInputEditText input,
      @NonNull TextInputLayout textInputLayout) {
    this.rootView = rootView;
    this.b0 = b0;
    this.b1 = b1;
    this.b2 = b2;
    this.b3 = b3;
    this.b4 = b4;
    this.b5 = b5;
    this.b6 = b6;
    this.b7 = b7;
    this.b8 = b8;
    this.b9 = b9;
    this.button11 = button11;
    this.floatingActionButton = floatingActionButton;
    this.input = input;
    this.textInputLayout = textInputLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.b0;
      Button b0 = rootView.findViewById(id);
      if (b0 == null) {
        break missingId;
      }

      id = R.id.b1;
      Button b1 = rootView.findViewById(id);
      if (b1 == null) {
        break missingId;
      }

      id = R.id.b2;
      Button b2 = rootView.findViewById(id);
      if (b2 == null) {
        break missingId;
      }

      id = R.id.b3;
      Button b3 = rootView.findViewById(id);
      if (b3 == null) {
        break missingId;
      }

      id = R.id.b4;
      Button b4 = rootView.findViewById(id);
      if (b4 == null) {
        break missingId;
      }

      id = R.id.b5;
      Button b5 = rootView.findViewById(id);
      if (b5 == null) {
        break missingId;
      }

      id = R.id.b6;
      Button b6 = rootView.findViewById(id);
      if (b6 == null) {
        break missingId;
      }

      id = R.id.b7;
      Button b7 = rootView.findViewById(id);
      if (b7 == null) {
        break missingId;
      }

      id = R.id.b8;
      Button b8 = rootView.findViewById(id);
      if (b8 == null) {
        break missingId;
      }

      id = R.id.b9;
      Button b9 = rootView.findViewById(id);
      if (b9 == null) {
        break missingId;
      }

      id = R.id.button11;
      Button button11 = rootView.findViewById(id);
      if (button11 == null) {
        break missingId;
      }

      id = R.id.floatingActionButton;
      FloatingActionButton floatingActionButton = rootView.findViewById(id);
      if (floatingActionButton == null) {
        break missingId;
      }

      id = R.id.input;
      TextInputEditText input = rootView.findViewById(id);
      if (input == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = rootView.findViewById(id);
      if (textInputLayout == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, b0, b1, b2, b3, b4, b5, b6, b7,
          b8, b9, button11, floatingActionButton, input, textInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
